angular.module("core").run(["$templateCache", function($templateCache) {$templateCache.put("app/core/views/footer.view.html","<section class=\"section grey darken-4 center repo-links\"></section>");
$templateCache.put("app/core/views/header.view.html","<div class=nav-wrapper><div class=container><a ui-sref=home class=\"brand-logo {{$navbar.logo}}\">mv<strong class=\"pink-text text-accent-1\">VM</strong></a><ul id=nav-mobile class=\"right side-nav\"><li><a class={{$navbar.links}} ui-sref=generators>Generators</a></li><li><a class={{$navbar.links}} ui-sref=materialize>Materialize</a></li></ul></div></div>");
$templateCache.put("app/core/views/home.view.html","<section class=\"section home-view indigo\"><div class=container><div class=row><h1 id=title class=title>mv<strong class=\"pink-text text-accent-1\">VM</strong><h5 id=subtitle class=\"tiny-title white-text\">model View <strong class=\"pink-text text-accent-1\">ViewModel</strong></h5></h1></div><div class=row><div class=\"col s12\"><h3 id=title-2 class=\"white-text title-2\">CLI & <strong>Generator</strong> for Developing with<strong class=\"pink-text text-accent-1\">. . .</strong></h3></div><div class=\"col s12\"><h3 class=title-3><strong class=\"pink-text text-accent-1\">@</strong>Gulp<strong>JS</strong></h3><h3 class=title-3><strong class=\"pink-text text-accent-1\">@</strong>Angular<strong>JS</strong></h3><h3 class=title-3><strong class=\"pink-text text-accent-1\">@</strong>Materialize<strong>CSS</strong></h3></div></div></div></section><section><section class=\"section grey darken-4 center repo-links\"><a href=http://github.com/joelcoxokc/mvvm class=\"waves-effect waves-light btn-large white pink-text\">GitHub</a> <a href=https://www.npmjs.com/package/mvvm class=\"waves-effect waves-light btn-large pink accent-1\">NPM</a></section></section>");
$templateCache.put("app/core/directives/mvVm/mvVm.view.html","<div class=\"container components\"><div class=\"line red lighten-2 center-align\"><h5 class=\"c vis-hide\">{{title}}</h5><h5 class=\"c vis-hide\">{{subtitle}}</h5></div></div>");
$templateCache.put("app/core/directives/vmItem/vmItem.view.html","<section class=\"vm-item white component\" data-ng-click=\"isOpen = !isOpen\" data-ng-class=\"{\'has-border\':hasBorder, \'vm-item-open\':isOpen}\" data-ng-transclude></section>");
$templateCache.put("app/modules/components/views/components.view.html","<div class=row><mv-vm title=AngularJS subtitle=Components><vm-item has-border=true data-ng-repeat=\"item in app.components\"><vm-item-heading ng-mouseenter=\"item.content = (item.text | limitTo:\'50\')\" ng-mouseleave=\"item.content = (item.text | limitTo:\'100\')\"><vm-item-left><span class=\"icon-circle blue lighten-2\"></span> {{item.title}}</vm-item-left><vm-item-center>{{item.content || item.text | limitTo:100}}...</vm-item-center><vm-item-tools><i class=mdi-content-create></i> <i class=mdi-action-schedule></i> <i class=mdi-action-done></i> <i class=mdi-navigation-more-vert></i></vm-item-tools></vm-item-heading><vm-item-content><p>{{item.text}}</p></vm-item-content></vm-item></mv-vm></div>");
$templateCache.put("app/modules/materialize/views/materialize.view.html","<div class=\"sub-nav white z-depth-1\"><div class=container><div class=\"col s12\"><ul class=tabs><li class=\"tab col s2\"><a href=#test1>collections</a></li><li class=\"tab col s2\"><a href=#test2>ButtonGroups</a></li></ul></div></div></div><main class=has-sub-nav><div id=test1 class=row><div class=container><div class=row><h3 class=indigo-text>Expandable Collection</h3><hr></div><div class=row><div data-ng-include=\"\'app/modules/materialize/views/collections/expandable.view.html\'\"></div></div></div></div><div id=test2 class=\"col s12\">Test 2</div><div id=test3 class=\"col s12\">Test 3</div><div id=test4 class=\"col s12\">Test 4</div></main>");
$templateCache.put("app/modules/generators/views/api.view.html","<section><header><h3>mvvm<strong class=\"red-text text-lighten-1\">{{generator.name | uppercase}}</strong></h3></header><main>The Api Generator Creates a new Client side api for accessing a RESTFUL endpoint. Currently the Api Generator only generates code using $http. Future versions will provide options for <strong>Restangular</strong> and <strong>ngResource</strong>.<hr><h4 class=\"red-text text-lighten-1\">Options</h4><h5>--service</h5>- will generate an api using a AngularJS Service.<h5>--factory</h5>- will generate an api using a AngularJS Factory.</main></section>");
$templateCache.put("app/modules/generators/views/config.view.html","<section><header><h3>mvvm<strong class=\"red-text text-lighten-1\">{{generator.name | uppercase}}</strong></h3></header><main>The Config Generator Creates a new AngularJS Configuration component. The first argument provided will be the name. If no name is specified, then you will be prompted for the component\'s name. For Every Option, if no flag is used, then you will be prompted for the answer.<hr><h4 class=\"red-text text-lighten-1\">Command</h4><pre><h5>mvvm make <strong>{{generator.name}}</strong> [<strong class=blue-text>name</strong>]</h5></pre><h4 class=\"red-text text-lighten-1\">Options</h4><h5>--module</h5>- will use generate the code within the chosen module\'s directory.<h5>-f, --functions <<stong class=blue-text>list</stong>></h5>- Comma seperated list, generates functions within the generated config.<h5>-p, --providers <<stong class=blue-text>list</stong>></h5>- Comma seperated list, Injects providers into the configuration.</main></section>");
$templateCache.put("app/modules/generators/views/controller.view.html","<section><header><h3>mvvm<strong class=\"red-text text-lighten-1\">{{generator.name | uppercase}}</strong></h3></header><main>The Controller Generator Creates a new AngularJS Controller component. The first argument provided will be the name. If no name is specified, then you will be prompted for the component\'s name. For Every Option, if no flag is used, then you will be prompted for the answer.<hr><h4 class=\"red-text text-lighten-1\">Command</h4><pre><h5>mvvm make <strong>config</strong> [<strong class=blue-text>name</strong>]</h5></pre><h4 class=\"red-text text-lighten-1\">Options</h4><h5>--module</h5>- will use generate the code within the chosen module\'s directory.<h5>-f, --functions <<stong class=blue-text>list</stong>></h5>- Comma seperated list, generates functions within the generated config.<h5>-p, --providers <<stong class=blue-text>list</stong>></h5>- Comma seperated list, Injects providers into the configuration.</main></section>");
$templateCache.put("app/modules/generators/views/directive.view.html","<section><header><h1>directive</h1></header><main><aside></aside><article></article></main><footer><h6>generators | <strong>directive</strong></h6></footer></section>");
$templateCache.put("app/modules/generators/views/factory.view.html","<section><header><h1>factory</h1></header><main><aside></aside><article></article></main><footer><h6>generators | <strong>factory</strong></h6></footer></section>");
$templateCache.put("app/modules/generators/views/filter.view.html","<section><header><h1>filter</h1></header><main><aside></aside><article></article></main><footer><h6>generators | <strong>filter</strong></h6></footer></section>");
$templateCache.put("app/modules/generators/views/generators.view.html","<div class=row><div class=container><div class=row><h3 class=indigo-text>Generators</h3><hr></div><div class=row><mv-collection class=\"collection collection-expandable\"><mv-generator data-ng-repeat=\"generator in vm.generators\" generator=generator></mv-generator></mv-collection></div></div></div>");
$templateCache.put("app/modules/generators/views/provider.view.html","<section><header><h1>provider</h1></header><main><aside></aside><article></article></main><footer><h6>generators | <strong>provider</strong></h6></footer></section>");
$templateCache.put("app/modules/generators/views/service.view.html","<section><header><h1>service</h1></header><main><aside></aside><article></article></main><footer><h6>generators | <strong>service</strong></h6></footer></section>");
$templateCache.put("app/modules/generators/views/styles.view.html","<section><header><h3>mvvm<strong class=\"red-text text-lighten-1\">{{generator.name | uppercase}}</strong></h3></header><main>The <strong>{{generator.name}}</strong> Generator Creates a new styles file. The first argument provided will be the name. If no name is specified, then you will be prompted for the component\'s name. For Every Option, if no flag is used, then you will be prompted for the answer.<hr><h4 class=\"red-text text-lighten-1\">Command</h4><pre><h5>mvvm make <strong>{{generator.name}}</strong> [<strong class=blue-text>name</strong>]</h5></pre><h4 class=\"red-text text-lighten-1\">Options</h4><h5>-m, --module [<stong class=blue-text>list</stong>]</h5>- The name of the module the {{generator.name}} belongs to.<h5>--styl</h5>- Boolean specifies whether to use stylus over css.<h5>--sass</h5>- Boolean specifies whether to use sass over css.<h5>--scss</h5>- Boolean specifies whether to use scss over css.<h5>--less</h5>- Boolean specifies whether to use less over css.</main></section>");
$templateCache.put("app/modules/generators/views/template.view.html","<section><header><h3>mvvm<strong class=\"red-text text-lighten-1\">{{generator.name | uppercase}}</strong></h3></header><main>The <strong>{{generator.name}}</strong> Generator Creates a new AngularJS {{Generator.name}} component. The first argument provided will be the name. If no name is specified, then you will be prompted for the component\'s name. For Every Option, if no flag is used, then you will be prompted for the answer.<hr><h4 class=\"red-text text-lighten-1\">Command</h4><pre><h5>mvvm make <strong>{{generator.name}}</strong> [<strong class=blue-text>name</strong>]</h5></pre><h4 class=\"red-text text-lighten-1\">Options</h4><h5>-m, --module [<stong class=blue-text>list</stong>]</h5>- The name of the module the {{generator.name}} belongs to.<h5>-f, --functions <<stong class=blue-text>list</stong>></h5>- Comma seperated list, generates functions within the generated {{generator.name}}.<h5>-p, --providers <<stong class=blue-text>list</stong>></h5>- Comma seperated list, Injects providers into the {{generator.name}}.</main></section>");
$templateCache.put("app/modules/generators/views/test.view.html","<section><header><h3>mvvm<strong class=\"red-text text-lighten-1\">{{generator.name | uppercase}}</strong></h3></header><main>The <strong>{{generator.name}}</strong> Generator Creates a new test in the specofoed module\'s tests directory. The first argument provided will be the name. If no name is specified, then you will be prompted for the component\'s name. For Every Option, if no flag is used, then you will be prompted for the answer.<hr><h4 class=\"red-text text-lighten-1\">Command</h4><pre><h5>mvvm make <strong>{{generator.name}}</strong> [<strong class=blue-text>name</strong>]</h5></pre><h4 class=\"red-text text-lighten-1\">Options</h4><h5>-m, --module [<stong class=blue-text>list</stong>]</h5>- The name of the module the {{generator.name}} belongs to.</main></section>");
$templateCache.put("app/modules/generators/views/view.view.html","<section><header><h3>mvvm<strong class=\"red-text text-lighten-1\">{{generator.name | uppercase}}</strong></h3></header><main>The <strong>{{generator.name}}</strong> Generator Creates a new html or jade template View. The first argument provided will be the name. If no name is specified, then you will be prompted for the component\'s name. For Every Option, if no flag is used, then you will be prompted for the answer.<hr><h4 class=\"red-text text-lighten-1\">Command</h4><pre><h5>mvvm make <strong>{{generator.name}}</strong> [<strong class=blue-text>name</strong>]</h5></pre><h4 class=\"red-text text-lighten-1\">Options</h4><h5>-m, --module [<stong class=blue-text>list</stong>]</h5>- The name of the module the {{generator.name}} belongs to.<h5>-J, --jade</h5>- Boolean specifies whether to use a jade template over html.</main></section>");
$templateCache.put("app/modules/materialize/directives/mvCollection/mvCollection.template.html","<div class=collection data-ng-class=\"{\'expandable\':expandable}\" data-ng-transclude></div>");
$templateCache.put("app/modules/materialize/directives/mvCollectionItem/mvCollectionItem.template.html","<div class=collection-item data-ng-transclude></div>");
$templateCache.put("app/modules/materialize/views/collections/expandable.view.html","<mv-collection class=\"collection collection-expandable\"><mv-collection-item data-ng-repeat=\"user in vm.users\"><div class=\"col s1\"><span class=\"collection-item-icon circle {{user.color}} lighten-2\">{{user.first | limitTo: 1}}</span></div><div class=\"col s4\"><span>{{user.first}} {{user.last}}</span></div><div class=\"col s7\">{{user.messages[0].title}}</div><div class=collection-item-actions><a class=item-action><i class=mdi-content-create></i></a> <a class=item-action><i class=mdi-action-schedule></i></a> <a class=item-action><i class=mdi-action-done></i></a> <a class=item-action><i class=mdi-navigation-more-vert></i></a></div><div class=collection-item-content><h4>{{user.messages[0].title}}</h4><p class>{{user.messages[0].text}}</p></div></mv-collection-item></mv-collection>");
$templateCache.put("app/modules/generators/directives/mvGenerator/mvGenerator.template.html","<div class=collection-item><div class=\"col s1\"><span class=\"collection-item-icon circle blue lighten-2\">{{generator.name | limitTo:1}}</span></div><div class=\"col s3\"><span>{{generator.name}}</span></div><div class=\"col s7\">{{generator.description}}</div><div class=collection-item-actions><a class=item-action><i class=mdi-content-create></i></a> <a class=item-action><i class=mdi-action-schedule></i></a> <a class=item-action><i class=mdi-action-done></i></a> <a class=item-action><i class=mdi-navigation-more-vert></i></a></div><div data-ng-if=\"generator.name === \'api\' || generator.name === \'test\' || generator.name === \'view\' || generator.name === \'styles\'\" class=collection-item-content data-ng-include=generator.view></div><div data-ng-if=\"generator.name === \'config\' || generator.name === \'controller\' || generator.name === \'directive\' || generator.name === \'service\' || generator.name === \'factory\' || generator.name === \'filter\' || generator.name === \'provider\'\" class=collection-item-content data-ng-include=\"\'app/modules/generators/views/template.view.html\'\"></div></div>");}]);